What is Django?
    => Django is a web application framework written in python programming language.It is based on MVT(Model View Template) design pattern

    It is also called batteries included framework because Django provides build-in features for everything


Why we need to learn Django?
    => Excellent documentation and high scalability.
    Used by Top MNCs and Companies, such as Instagram,Spotify, Youtube, Bitbucket,Dropbox, etc. and the list is never-ending.
    Easiest Framework to learn, rapid development and Batteries fully included.
    One can integrate it Web scraping,Machine Learning,Image Processing, Scientific Computing,etc with web application and do lots and lots of advance stuff

Unique Features of Django
   -> Admin Inferface 
   -> Object-Relational Mapping(ORM)

How does Django work
    => The MVT is an design pattern that separates an application into three main logical components Model,view and Template.


    User <=> django <=> URL <=>(View <=> Model)|| (View <=> Template)

MVT =>

   Model -> The data we want to present,usually data from a database

   View -> A request handler that returns the relevant template and content - based on the request from the user.

   Template -> It represents how data sould be presented to the application user. It may consists of HTML,CSS,JS mixed with Django Template language.


Django Installation:
   Globally
   In virtual environment

What is virtual environment?
   => A virtual environment is a tool that helps to keep dependencies required by different projects separate by creating isolated python virtual environments for them.

Why do we need a virtual environment? 

How does a virtual environment work?
    => Step-1: Installing virtual environment:
       already installed while installing python
       
    => Step-2: Test your installation:
       $ pipenv --version
       $ python -m pipenv --version

    => Step-3: Naming Virtual Env:
       $ python -m venv room1 

    => Step-4: Activating Virtual Env:
       $ <venv>\Scripts\activate.bat 
    
    => Step-5: Deactivating Virtual Env:
       $ deactivate 
    

create project -> 
   django-admin startproject project_name

for creating an application ->
   django-admin startapp app_name 

run server ->
   python manage.py runserver
=>
python manage.py runserver

first_project -- manage.py
     |
|---------------|
| first_project |
| init.py       |
| asgi.py       |
| settings.py   |
| urls.py       |
| wsgi.py       |
|               |

Outer project folder/Root directory
Inner Project Folder 


* __init__.py -> The folder which contains __init__.py file is as considered as python package 
* wsgi.py -> WSGI (web server gateway interface) is a specification that describes how a web server communicates with web applications,synchronous. 

* asgi.py -> Asynchronous Server Gateway interface.ASGI provides standard for both asynchronous and synchronous

* settings.py -> This file contains all the information or data about project settings.E.g.: Database Config information,Template,Installed Application,Validators etc.

*urls.py -> contains information of url attached with application.

* manage.py -> manage.py is a project-specific command-line utility.

